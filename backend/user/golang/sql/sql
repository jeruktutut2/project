## CREATE CONTAINER  
```
docker run --name golang-note -e MYSQL_ROOT_PASSWORD=12345 -e MYSQL_DATABASE=golang_note -p 3308:3306 -d mysql:8.1.0
u
mysql -h localhost -u root -p12345
docker run --name project-mysql -e MYSQL_ROOT_PASSWORD=12345 -p 3309:3306 -d mysql:8.1.0
```

## Databas user:
create database user;  

## TABLE user:
```
CREATE TABLE IF NOT EXISTS user(
    id INT(11) NOT NULL AUTO_INCREMENT,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    password VARCHAR(100) NOT NULL,
    -- refresh_token VARCHAR(255) NOT NULL,
    utc VARCHAR(6) NOT NULL,
    created_at BIGINT NOT NULL,
    PRIMARY KEY (id),
    UNIQUE INDEX username_unique_index (username),
    UNIQUE INDEX email_unique_index (email)
    -- INDEX username_refresh_token_index(username, refresh_token)
) ENGINE=INNODB;

INSERT INTO user (id,username,email,password,utc,created_at) VALUES (1,"username","email@email.com","$2a$10$MvEM5qcQFk39jC/3fYzJzOIy7M/xQiGv/PAkkoarCMgsx/rO0UaPG","utc",1695095017);
SELECT * FROM user;

DROP TABLE IF EXISTS user;

EXPLAIN SELECT id, username, email, password, refresh_token, utc, created_at FROM user WHERE username = "username" FOR UPDATE;
EXPLAIN SELECT id, username, email, password, refresh_token, utc, created_at FROM user WHERE username = "username" AND refresh_token = "refresh_token";

{"username": "username", "password": "password@A1"}
```

## TABLE permission
```
CREATE TABLE IF NOT EXISTS permission(
    id INT(11) NOT NULL AUTO_INCREMENT,
    permission VARCHAR(50) NOT NULL,
    PRIMARY KEY (id),
    UNIQUE INDEX permission_unique_index (permission)
) ENGINE=INNODB;

INSERT INTO permission (permission)
VALUES ("CREATE_BOOK"),
("READ_BOOK"),
("UPDATE_BOOK"),
("DELETE_BOOK");

INSERT INTO permission (permission) VALUES ("ADMINISTRATOR"), ("CREATE_PERMISSION"), ("READ_PERMISSION"), ("UPDATE_PERMISSION"), ("DELETE_PERMISSION");

SELECT * FROM permission;

DROP TABLE IF EXISTS permission;
```

## TABLE user_permission
```
CREATE TABLE IF NOT EXISTS user_permission (
    id INT(11) NOT NULL AUTO_INCREMENT,
    user_id INT(11) NOT NULL,
    permission_id INT(11) NOT NULL,
    PRIMARY KEY (id),
    FOREIGN KEY fk_user_permission_user(user_id) REFERENCES user(id),
    FOREIGN KEY fk_user_permission_permission(permission_id) REFERENCES permission(id)
) ENGINE=INNODB;

INSERT INTO user_permission(user_id, permission_id)
VALUES (1, 1), (1, 2), (1, 3), (1, 4), (1, 5);

SELECT * FROM user_permission;

DROP TABLE IF EXISTS user_permission;
```

## Table table1
```
CREATE TABLE IF NOT EXISTS table1 (
    id INT(11) NOT NULL AUTO_INCREMENT,
    table1 VARCHAR(50) NOT NULL,
    PRIMARY KEY (id)
) ENGINE=INNODB;

SELECT * FROM table1;

INSERT INTO table1(table1) VALUES("table1");
DROP TABLE table1;
```

## Table table2
```
CREATE TABLE IF NOT EXISTS table2 (
    id INT(11) NOT NULL AUTO_INCREMENT,
    table2 VARCHAR(50) NOT NULL,
    PRIMARY KEY (id)
) ENGINE=INNODB;

SELECT * FROM table2;

INSERT INTO table2(table2) VALUES("table2");

DROP TABLE table2;
```

## Table table3
```
CREATE TABLE IF NOT EXISTS table3 (
    id INT(11) NOT NULL AUTO_INCREMENT,
    table3 VARCHAR(50) NOT NULL,
    PRIMARY KEY (id)
) ENGINE=INNODB;

SELECT * FROM table3;

INSERT INTO table3(table3) VALUES("table3");

DROP TABLE table3;
```